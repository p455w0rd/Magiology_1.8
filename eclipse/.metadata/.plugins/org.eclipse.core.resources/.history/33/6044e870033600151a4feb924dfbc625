package com.magiology.forgepowered.packets.toserver;

import java.io.IOException;

import org.lwjgl.util.vector.Vector2f;

import com.magiology.api.multicolision.MultiColisionProvider;
import com.magiology.api.multicolision.MultiColisionProvider.MultiColisionProviderRayTracer;
import com.magiology.forgepowered.packets.skeleton.AbstractToServerMessage;
import com.magiology.mcobjects.tileentityes.hologram.Button;
import com.magiology.mcobjects.tileentityes.hologram.TileEntityHologramProjector;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.network.PacketBuffer;
import net.minecraft.tileentity.TileEntity;
import cpw.mods.fml.relauncher.Side;

public class NewHologramComponentPacket extends AbstractToServerMessage{
	private int pos[],id;
	public NewHologramComponentPacket(){}
	public NewHologramComponentPacket(TileEntityHologramProjector tile,int id){
		pos=new int[]{tile.xCoord,tile.yCoord,tile.zCoord};
		this.id=id;
	}
	@Override
	public void write(PacketBuffer buffer)throws IOException{
		writePos(buffer, pos);
		buffer.writeInt(id);
	}
	@Override
	public void read(PacketBuffer buffer) throws IOException{
		pos=readPos(buffer);
		id=buffer.readInt();
	}
	@Override
	public void process(EntityPlayer player, Side side){
		TileEntity tile=player.worldObj.getTileEntity(pos[0], pos[1], pos[2]);
		if(tile instanceof TileEntityHologramProjector){
			switch (id){
			case 0:{
				Button button=new Button();
				((TileEntityHologramProjector)tile).renderObjects.add(button);
				button.size=new Vector2f(p*30, p*10);
				button.setString("new string");
			}break;
			}
			((TileEntityHologramProjector)tile).sync();
		}
	}

}
