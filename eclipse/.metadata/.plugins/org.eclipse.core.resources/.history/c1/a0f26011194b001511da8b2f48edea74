public static final class MediaFireDownlader{
		private MediaFireDownlader(){}
		public void downladAndName(String filePath,String URL){
			filePath+=URL.substring(URL.lastIndexOf("/"));
			downlad(filePath, URL);
		}
		public void downlad(String filePath,String URL){
	        try{
	            String downloadLink=findingValidLink(getUrlSrc(URL));
	            saveToDisc(downloadLink,filePath);
	        }catch(Exception e){e.printStackTrace();}
	    }
		
		
		private void saveToDisc(String filePath,String URL)throws Exception{
	        Helper.println("Downloading "+filePath.substring(filePath.lastIndexOf("/")));
	        BufferedInputStream in=null;
	        FileOutputStream fout=null;
	        try{
	            in=new BufferedInputStream(new URL(URL).openStream());
	            fout=new FileOutputStream(filePath);
	            final byte data[]=new byte[1024];
	            int count;
	            while(-1!=(count=in.read(data, 0, 1024)))fout.write(data, 0, count);
	        }finally{
	            if(in!=null)in.close();
	            if (fout!=null)fout.close();
	        }
	        Helper.println(filePath.substring(filePath.lastIndexOf("/"))+" is successfuly downladed!");
	    }
		private static String getUrlSrc(String URL)throws Exception{
	        Helper.println("Connecting to "+URL);
	        URL link=new URL(URL);
	        URLConnection linkCon=link.openConnection();
	        BufferedReader reader=new BufferedReader(new InputStreamReader(linkCon.getInputStream(), "UTF-8"));
	        String inputLine,total="";
	        while((inputLine=reader.readLine())!=null)total+=inputLine;
	        reader.close();
	        return total;
	    }
	    private static String findingValidLink(String string){
	        Helper.println("Fetching download link: "+string);
	        try{
	            String code="(?=\\<)|(?<=\\>)";
	            String data[]=string.split(code);
	            String status="NOTFOUND";
	            for(String data1:data)if(data1.contains("DLP_mOnDownload(this)")){
	            	status=data1;
	            	break;
	            }
	            String cleanVersion=status.substring(status.indexOf("href=\"")+6);
	            cleanVersion=cleanVersion.substring(0, cleanVersion.indexOf("\""));
	            return cleanVersion;
	        }catch(Exception e){
	            e.printStackTrace();
	            return "ERROR";
	        }
	    }
	}