package com.magiology.gui;

import java.awt.Rectangle;

import org.lwjgl.input.Mouse;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.GL11;
import org.lwjgl.util.vector.Vector2f;

import com.magiology.core.MReference;
import com.magiology.modedmcstuff.ColorF;
import com.magiology.objhelper.DoubleObject;
import com.magiology.objhelper.Get;
import com.magiology.objhelper.helpers.Helper;
import com.magiology.objhelper.helpers.Helper.H;
import com.magiology.objhelper.helpers.renderers.GL11H;
import com.magiology.objhelper.helpers.renderers.NormalizedVertixBuffer;
import com.magiology.objhelper.helpers.renderers.TessHelper;
import com.magiology.objhelper.vectors.AdvancedPhysicsVec3F;
import com.magiology.objhelper.vectors.Vec3M;

public class MainMenuUpdateNotification{
	
	public static AdvancedPhysicsVec3F rotation=new AdvancedPhysicsVec3F(new Vec3M(), new Vec3M(0.2,0.2,0.2));
	private static NormalizedVertixBuffer buff=TessHelper.getNVB();
	private static DoubleObject<Integer, Boolean> mousePrev;
	public static boolean isClicked,selected;
	public static ColorF backgroundColor=new ColorF(0, 0, 0, 0.2F);
	public static int timeout;
	
	public static void update(){
		rotation.update();
		if(H.RB(0.1)){
			rotation.x.wantedPoint=H.CRandF(10);
			rotation.y.wantedPoint=H.CRandF(10);
			rotation.z.wantedPoint=H.CRandF(1);
		}
		int 
			l1=Get.Render.FR().getStringWidth("New update for: "+MReference.NAME),
			FH=Get.Render.FR().FONT_HEIGHT;
		Rectangle boundingBox=new Rectangle(4,4,l1+8,FH*2+8);
		//simulate mouse event because forge mouse event is not active in main menu :(
		selected=boundingBox.contains(Mouse.getX(),Display.getHeight()-Mouse.getY());
		
		if(mousePrev!=null){
			if(Mouse.getEventButton()==0&&Mouse.getEventButtonState()&&!mousePrev.obj2){
				int x1=Mouse.getX(),y1=Display.getHeight()-Mouse.getY();
				Helper.printInln(x1,y1);
				if(boundingBox.contains(x1, y1)){
					isClicked=true;
					timeout=40;
				}
			}
		}
		mousePrev=new DoubleObject<Integer, Boolean>(Mouse.getEventButton(),Mouse.getEventButtonState());
		if(selected){
			rotation.x.wantedPoint=rotation.y.wantedPoint=rotation.z.wantedPoint=0;
			rotation.x.friction=rotation.y.friction=rotation.z.friction=0.1F;
		}else{
			rotation.x.friction=rotation.y.friction=rotation.z.friction=0.9F;
		}
		
	}
	
	public static void render(int width,int height){
		Vector2f defultSize=new Vector2f(854,480);
		String s1="New update for: "+MReference.NAME,s2="[click for more]";
		
		
		boolean showBox=selected;
		float 
			x=rotation.x.getPoint(), 
			y=rotation.y.getPoint(), 
			z=rotation.z.getPoint();
		int 
			l1=Get.Render.FR().getStringWidth(s1),
			l2=Get.Render.FR().getStringWidth(s2),
			col=new ColorF(0.75+x/40, 0.75+y/40, 0.75+z/4, 1).toCode(),
			FH=Get.Render.FR().FONT_HEIGHT;
		
		
		if(showBox){
			buff.addVertexWithUV(0, 0, 0, 0, 0);
			buff.addVertexWithUV(0, FH*2+8, 0, 0, 0);
			buff.addVertexWithUV(l1+8, FH*2+8, 0, 0, 0);
			buff.addVertexWithUV(l1+8, 0, 0, 0, 0);
			buff.draw();
		}
		
		GL11H.protect();
		GL11H.lighting(false);
		GL11H.depth(false);
		GL11H.SetUpOpaqueRendering(1);
		GL11H.texture(false);

		GL11.glTranslatef(4, 4, 0);
		GL11H.rotateXYZAt(x,y,z, l1/2, FH, 0);
		GL11H.color(backgroundColor);
		//input vertices
		buff.addVertexWithUV(0, 0, 0, 0, 0);
		buff.addVertexWithUV(0, FH*2+4, 0, 0, 0);
		buff.addVertexWithUV(l1+4, FH*2+4, 0, 0, 0);
		buff.addVertexWithUV(l1+4, 0, 0, 0, 0);
		//do not kill them
		buff.disableClearing();
		//draw the quad
		buff.draw();
		//k now you can kill them and before you do so turn them into a wire
		buff.enableClearing();
		buff.setDrawModeToWireFrame();
		//and color them
		GL11.glColor4f(0, 0, 0, 0.4F);
		//JUST DO IT!!
		buff.draw();
		//dam that was messed up
		buff.setDrawModeToQuadPlate();
		GL11.glColor4f(1,1,1,1);
		//reset stuff for font rendering
		GL11H.texture(true);
		GL11H.EndOpaqueRendering();
		//move text get out of the way. Get out of the way text get out of the way.
		GL11.glTranslatef(2, 2, 0);
		//draw text
		Get.Render.FR().drawStringWithShadow(s1, 0, 0, col);
		GL11.glPushMatrix();
		//center the second line
		GL11.glTranslatef((l1-l2)/2, 0, 0);
		Get.Render.FR().drawStringWithShadow(s2, 0, FH, col);
		GL11.glPopMatrix();
		
		//protect vanilla rendering for my stuff
		GL11H.depth(true);
		GL11H.endProtection();
	}
	
}
