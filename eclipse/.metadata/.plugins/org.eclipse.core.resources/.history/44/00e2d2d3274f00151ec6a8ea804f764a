package com.magiology.api.connection;

import com.sun.prism.impl.BaseMesh.FaceMembers;

import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.EnumFacing;

public interface IConnection{
	public boolean getMain();
	public void setMain(boolean var);
	
	public boolean isMainAutomatic();
	public void setIsMainAutomatic(boolean var);
	
	public boolean getIn();
	public void setIn(boolean var);
	
	public boolean getOut();
	public void setOut(boolean var);
	
	public IConnection[] getMates();
	
	public IConnectionProvider getHost();
	
	public boolean isBanned();
	public void setIsBanned(boolean var);
	
	public boolean getChangeableByUser();
	public void setChangeableByUser(boolean var);
	
	public EnumFacing getFaceEF();
	public int getFaceI();
	
	public boolean hasOpposite();
	
	public boolean isEnding();
	
	public boolean isIntersection();
	
	public boolean isActive();
	
	public ConnectionType getType();
	public static final class IConnectionFactory{
		private IConnectionFactory(){}
		
		public static IConnection New(IConnectionProvider host,ConnectionType type,int side){
			return new Connection(host, type, side);
		}
		public static IConnection New(IConnectionProvider host,ConnectionType type,EnumFacing side){
			return new Connection(host, type, side);
		}
		public static IConnection[] NewArray(IConnectionProvider host,ConnectionType type){
			IConnection[] result=new IConnection[6];
			for(int i=0;i<6;i++)result[i]=New(host, type, i);
			return result;
		}
	}
}
