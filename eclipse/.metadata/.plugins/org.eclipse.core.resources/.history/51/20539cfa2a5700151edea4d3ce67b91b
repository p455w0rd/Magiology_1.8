package com.magiology.gui.custom.hud;

import java.util.ArrayList;
import java.util.List;

import org.lwjgl.opengl.GL11;

import com.magiology.api.updateable.Updater;
import com.magiology.gui.GuiUpdater.Updateable;
import com.magiology.util.utilclasses.Get;
import com.magiology.util.utilclasses.Helper;
import com.magiology.util.utilobjects.ColorF;
import com.magiology.util.utilobjects.vectors.AdvancedPhysicsFloat;

public class FakeMessageHUD extends HUD{
	
	private static List<Message> messages=new ArrayList<Message>();
	
    @Override
	public void render(int xScreen, int yScreen, float partialTicks){
    	GL11.glPushMatrix();
    	GL11.glTranslatef(xScreen, yScreen, 0);
		for(Message msg:messages){
			msg.redner();
			GL11.glTranslatef(0, -Get.Render.FR().FONT_HEIGHT-1, 0);
		}
		GL11.glPopMatrix();
	}
    @Override
	public void update(){
    	Updater.update(messages);
    }
    
    public static void addMessage(Message msg){
    	int mach=-1;
    	for(int i=0;i<messages.size();i++){
			if(messages.get(i).isSameId(msg)){
				mach=i;
				break;
			}
		}
    	if(mach!=-1)messages.set(mach, msg);
    	else messages.add(0, msg);
    }
	public static class Message implements Updateable{
		private ColorF color,prevColor;
		private String text,id;
		protected AdvancedPhysicsFloat pos;
		private int age;
		private boolean isDead=false;
		public Message(ColorF color, String text, String id){
			this.color=this.prevColor=color;
			this.text=text;
			this.id=id;
			
		}
		@Override
		public void update(){
			prevColor=color;
			if(age>80)color.a-=0.1;
			if(color.a<0)isDead=true;
			age++;
		}
		public void redner(){
			Get.Render.FR().drawStringWithShadow(text, 0, 0, Helper.calculateRenderColor(prevColor, this.color).toCode());
		}
		public boolean isSameId(Message msg){
			return this.id.equals(msg.id);
		}
		public boolean isDead(){
			return isDead;
		}
	}
	
	private static FakeMessageHUD instance;
	public static FakeMessageHUD get(){
		if(instance==null)instance=new FakeMessageHUD();
		return instance;
	}
	private FakeMessageHUD(){}
}
