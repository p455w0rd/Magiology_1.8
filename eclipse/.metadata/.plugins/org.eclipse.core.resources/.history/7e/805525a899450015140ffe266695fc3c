package com.magiology.api.power;

import java.util.List;

import net.minecraft.block.state.IBlockState;
import net.minecraft.entity.item.EntityItem;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.util.BlockPos;
import net.minecraft.util.EnumParticleTypes;
import net.minecraft.world.World;

import com.magiology.mcobjects.effect.EntitySmoothBubleFX;
import com.magiology.objhelper.helpers.Helper;
import com.magiology.objhelper.helpers.Helper.H;

public interface PowerCore{
	
	public int getCurrentEnergy();
	public int getMaxTSpeed();
	public int getMiddleTSpeed();
	public int getMinTSpeed();
	public int getMaxEnergyBuffer();
	public int getModedMaxEnergyBuffer();
	public int getModedMaxTSpeed();
	public boolean isPowerKeptOnWrench();
	
	public void setCurrentEnergy(int Int);
	public void setMaxTSpeed(int Int);
	public void setMiddleTSpeed(int Int);
	public void setMinTSpeed(int Int);
	public void setMaxEnergyBuffer(int Int);
	public void setModedMaxEnergyBuffer(int Int);
	public void setModedMaxTSpeed(int Int);
	
	public void addEnergy(int amount);
	public void subtractEnergy(int amount);
	
	public static class SavePowerToItemEvents{
		/**Keep it short! The shorter it is less bandwidth it takes!*/
		public static final String SAVE_TO_ITEM_PREFIX="M_PC_item";//Magiology power core item 
		
		public static void onPowerCoreWrenched(BlockPos pos, EntityPlayer player, World world, TileEntity tile){
			if(player.isSneaking()){
				PowerCore tileMT=(PowerCore) tile;
				if(world.isRemote){
					//optional!! spawns particles from percentage of how full the power tile is
					int ab=(int)(((float)tileMT.getCurrentEnergy()/(float)tileMT.getMaxEnergyBuffer())*10);
					for(int a=0;a<ab*3;a++)world.spawnParticle(EnumParticleTypes.SMOKE_NORMAL, pos.getX()+0.5, pos.getY()+0.5, pos.getZ()+0.5, 0, 0, 0);
					for(int a=0;a<ab;a++)Helper.spawnEntityFX(new EntitySmoothBubleFX(world,
						pos.getX()+0.5,pos.getY()+0.5,pos.getZ()+0.5,Helper.CRandF(0.05),Helper.CRandF(0.05),Helper.CRandF(0.05),
						150,4+Helper.RInt(3),3,true,2,"tx1",
						1, 0.2+Helper.RF()*0.5, 0.2+Helper.RF()*0.2, 1, 0.99));
				}
				if(!player.capabilities.isCreativeMode){
					Helper.printInln("yay");
					IBlockState state=world.getBlockState(pos);
					List<ItemStack> drops=state.getBlock().getDrops(world, pos, state, 0);
					if(drops.size()==1&&tileMT.getCurrentEnergy()>0){
						ItemStack stack=drops.get(0);
						H.createNBT(stack);
						NBTTagCompound nbt=stack.getTagCompound();
						nbt.setInteger(SAVE_TO_ITEM_PREFIX+"energy", tileMT.getCurrentEnergy());
						EntityItem entityItem=Helper.dropBlockAsItem(world,pos.getX()+0.5,pos.getY()+0.5,pos.getZ()+0.5, stack);
					}
					//else is important... it is important mister Lapis... *faceplam*
					else Helper.getBlock(world, pos).dropBlockAsItem(world, pos, world.getBlockState(pos), 0);
				}
				world.setBlockToAir(pos);
			}
		}
		
		public static void onPowerCorePlaced(BlockPos pos, EntityPlayer player, World world, TileEntity tile){
			ItemStack itemInHand=player.getCurrentEquippedItem();
			if(itemInHand.hasTagCompound()&&itemInHand.getTagCompound().hasKey(SAVE_TO_ITEM_PREFIX+"energy")){
				((PowerCore)tile).setCurrentEnergy(itemInHand.getTagCompound().getInteger(SAVE_TO_ITEM_PREFIX+"energy"));
			}
		}
	}
}
