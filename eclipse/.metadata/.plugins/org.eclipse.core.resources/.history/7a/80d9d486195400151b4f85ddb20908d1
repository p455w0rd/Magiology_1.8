package com.magiology.gui.guiutil.gui.buttons;

import com.magiology.util.renderers.GL11H;
import com.magiology.util.utilobjects.ColorF;

import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.FontRenderer;
import net.minecraft.client.gui.GuiButton;
import net.minecraft.client.renderer.GlStateManager;

public class CleanButton extends GuiButton{
	
	public ColorF color,prevColor;
	public boolean[] enabledOutline={true,true,true,true};
	
	public CleanButton(int buttonId, int x, int y, String buttonText, ColorF color){
		super(buttonId, x, y, buttonText);
		this.color=prevColor=color;
	}
	
	public CleanButton(int buttonId, int x, int y, int widthIn, int heightIn, String buttonText, ColorF color){
		super(buttonId, x, y, widthIn, heightIn, buttonText);
		this.color=prevColor=color;
	}
	
	@Override
	public void drawButton(Minecraft mc, int mouseX, int mouseY){
        if (this.visible)
        {
            FontRenderer fontrenderer = mc.fontRendererObj;
            mc.getTextureManager().bindTexture(buttonTextures);
            GlStateManager.color(1.0F, 1.0F, 1.0F, 1.0F);
            this.hovered = mouseX >= this.xPosition && mouseY >= this.yPosition && mouseX < this.xPosition + this.width && mouseY < this.yPosition + this.height;
            int k = this.getHoverState(this.hovered);
            GL11H.blend(true);
            GL11H.blendFunc(0);
            this.drawTexturedModalRect(this.xPosition, this.yPosition, 0, 46 + k * 20, this.width / 2, this.height);
            this.drawTexturedModalRect(this.xPosition + this.width / 2, this.yPosition, 200 - this.width / 2, 46 + k * 20, this.width / 2, this.height);
            this.mouseDragged(mc, mouseX, mouseY);
            int l = 14737632;

            if(packedFGColour!= 0)l=packedFGColour;
            else if(!this.enabled)l=10526880;
            else if(this.hovered)l=16777120;

            this.drawCenteredString(fontrenderer, this.displayString, this.xPosition + this.width / 2, this.yPosition + (this.height - 8) / 2, l);
        }
    }
	
	public CleanButton setOutline(int side, boolean enabled){
		enabledOutline[side]=enabled;
		return this;
	}
	public CleanButton setOutline(boolean[] enabled){
		enabledOutline=enabled;
		return this;
	}
}
